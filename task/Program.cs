using System.Drawing;

namespace task;

/// <summary>
///     Flyweight
///     Спроектируйте приложение «Военная база». Приложение будет
///     отображать план местности, на которой будут размещены военные
///     объекты.
///     Все боевые единицы имеют нечто общее:
///     • Картинку для отображения.
///     • Скорость перемещения.
///     • Коэффициент силы.
///     • Метод Show, который принимает в качестве параметра позицию
///     объекта.
///     Боевые единицы имеют строгую классификацию:
///     1. Легкая пехота
///     a. Скорость 20
///     b. Сила 10
///     2. Транспортные автомашины
///     a. Скорость 70
///     b. Сила 0
///     3. Тяжелая наземная боевая техника
///     a. Скорость 15
///     b. Сила 150
///     4. Легкая наземная боевая техника
///     a. Скорость 50
///     b. Сила 30
///     5. Авиатехника
///     a. Скорость 300
///     b. Сила 100
///     Для того чтобы приложение требовало меньше ресурсов,
///     необходимо построить архитектуру данного приложения на основе
///     паттерна «Flyweight». Другими словами, объект каждого типа боевой
///     единицы будет один, однако рисоваться будет сразу в нескольких частях
///     экрана.
/// </summary>

// Паттерн используется для уменьшения затрат при работе с большим количеством мелких объектов.
// Следует применять этот паттерн, когда выполнены все нижеперечисленные условия:
// - в приложении используется большое число объектов;
// - из-за этого накладные расходы на хранение высоки;
// - большую часть состояния объектов можно вынести вовне;
// - многие группы объектов можно заменить относительно небольшим количеством разделяемых объектов, поскольку внешнее состояние вынесено.
internal class Program
{
    private static void Main(string[] args)
    {
        /*
        Client - клиент:
        - хранит ссылки на одного или нескольких приспособленцев;
        - вычисляет или хранит внешнее состояние приспособленцев.
        */
        var units = new List<string>
        {
            "Aerotechnics",
            "Aerotechnics",
            "LightGroundCombatEquipment",
            "HeavyGroundCombatEquipment",
            "HeavyGroundCombatEquipment",
            "LightInfantry",
            "TransportVehicles"
        };

        var factory = new CombatUnitFactory();
        var r = new Random();
        for (var i = 0; i < 10; i++)
        {
            var index = r.Next(0, units.Count);
            var unit = factory.GetCombatUnit(units[index]);
            unit.Show(new Point(r.Next(0, 100), r.Next(0, 100)));
        }
    }
}